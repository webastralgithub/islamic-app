{"version":3,"sources":["./src/app/auth/components/reset-pin/reset-pin.component.ts","./src/app/auth/components/reset-pin/reset-pin.component.html","./src/environments/environment.ts","./src/app/auth/components/reset-password/reset-password.component.ts","./src/app/auth/components/reset-password/reset-password.component.html","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/auth/components/view-user/view-user.component.ts","./src/app/auth/components/view-user/view-user.component.html","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/modules/journals/journals.component.ts","./src/app/modules/journals/journals.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKlD,aAAa;AACkE;AAG/E,cAAc;AACuB;;;;;;;ICNpB,0EAAoD;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,mFAAe;;;IACpE,0EAAuD;IAAA,uDAAiB;IAAA,4DAAM;;;IAAvB,0DAAiB;IAAjB,qFAAiB;;;IAS5D,sEAAuC;IAAA,8EAAmB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,qHAAgE;IACpE,4DAAM;;;IADI,0DAA+B;IAA/B,kGAA+B;;;IAOrC,sEAA2C;IAAA,0EAAe;IAAA,4DAAM;;;IADpE,0EACI;IAAA,qHAAgE;IACpE,4DAAM;;;IADI,0DAAmC;IAAnC,sGAAmC;;;IAMzC,sEAAiF;;;ADXtG,MAAM,iBAAiB;IAgB5B,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,WAAwB;QAIhC,wCAAwC;QACxC,yCAAyC;QACzC,oCAAoC;QACpC,IAAI;QAVI,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAjBlC,cAAS,GAAG,IAAI,wDAAS,CAAC;YAExB,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAEnD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAE1D,CAAC,CAAC;QACD,kBAAa,GAAG,KAAK,CAAC;QACtB,oBAAe,GAAG,KAAK,CAAC;IAkBxB,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,GAAE;YACvC,IAAG,MAAM,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC;qBAC3E,SAAS,CACR,IAAI,CAAC,EAAE;oBACT,8BAA8B;oBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAGd,IAAG,IAAI,KAAK,KAAK,EAAC;wBAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC5B;gBAGH,CAAC,EACD,KAAK,CAAC,EAAE;oBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAGrB,CAAC,CACF;aAEF;QACH,CAAC,CAAC;IAEJ,CAAC;IAGD,mDAAmD;IACnD,IAAI,CAAC,KAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC;IAEzC,QAAQ;QAEN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACrC,gBAAgB;QAGhB,yBAAyB;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,kCAAkC;QAClC,IAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC;YAEzB,OAAO;SACP;QAGD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC;aACxE,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,IAAI,CAAC,EAAE;YACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,4BAA4B;YAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAG3B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;YAEnC,sBAAsB;QAGxB,CAAC,CACF;IACH,CAAC;;kFA3GU,iBAAiB;iGAAjB,iBAAiB;QChB9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACK;QAAA,6GAAyE;QAC1E,6GAA8E;QAC9E,wEAAwB;QAAA,oEAAS;QAAA,4DAAK;QACtC,gEACA;QAAA,0EAEI;QAF0B,6IAAY,cAAU,IAAC;QAEjD,0EACI;QAAA,4EAAiB;QAAA,mEAAO;QAAA,4DAAQ;QAChC,wEACA;QAAA,gHAEM;QACV,4DAAM;QACN,0EACI;QAAA,4EAAiB;QAAA,uEAAW;QAAA,4DAAQ;QACpC,wEACA;QAAA,gHAEM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,8EACI;QAAA,kHAAiF;QACjF,uEACJ;QAAA,4DAAS;QACT,iEACA;QACJ,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;;QAlCiB,0DAAiB;QAAjB,iFAAiB;QAClB,0DAAmB;QAAnB,mFAAmB;QAGnB,0DAAuB;QAAvB,oFAAuB;QAI+D,0DAAiE;QAAjE,uLAAiE;QAC/I,0DAAyC;QAAzC,6GAAyC;QAMyC,0DAAqE;QAArE,4LAAqE;QACvJ,0DAA6C;QAA7C,iHAA6C;QAM3C,0DAA0B;QAA1B,uFAA0B;QACvB,0DAAmB;QAAnB,mFAAmB;;6FDXzC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEfD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,iCAAiC;CAC1C,CAAC;AAGF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKlD,aAAa;AACkE;AAG/E,cAAc;AACuB;;;;;;;ICNpB,0EAAoD;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,mFAAe;;;IACpE,0EAAuD;IAAA,uDAAiB;IAAA,4DAAM;;;IAAvB,0DAAiB;IAAjB,qFAAiB;;;IAS5D,sEAA4C;IAAA,+EAAoB;IAAA,4DAAM;;;IAD1E,0EACI;IAAA,0HAAsE;IAC1E,4DAAM;;;IADI,0DAAoC;IAApC,uGAAoC;;;IAO1C,sEAAgD;IAAA,+EAAoB;IAAA,4DAAM;;;IAD9E,0EACI;IAAA,0HAA0E;IAC9E,4DAAM;;;IADI,0DAAwC;IAAxC,2GAAwC;;;IAM9C,sEAAiF;;;ADXtG,MAAM,sBAAsB;IAejC,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,WAAwB;QAIhC,uCAAuC;QACvC,yCAAyC;QACzC,yCAAyC;QACzC,IAAI;QAVI,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAjBlC,cAAS,GAAG,IAAI,wDAAS,CAAC;YAExB,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAExD,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAE/D,CAAC,CAAC;QACD,kBAAa,GAAG,KAAK,CAAC;QACtB,oBAAe,GAAG,KAAK,CAAC;IAkBxB,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IAEL,CAAC;IAGD,mDAAmD;IACnD,IAAI,CAAC,KAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC;IAEzC,QAAQ;QACN,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACrC,gBAAgB;QAGhB,yBAAyB;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,kCAAkC;QAClC,IAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC;YACzB,KAAK,CAAC,OAAO,CAAC;SACd;QAGD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC;aACvF,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,IAAI,CAAC,EAAE;YACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAEvB,kCAAkC;YAClC,4BAA4B;YAC5B,6CAA6C;YAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAGpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QAErC,CAAC,CACF;IACH,CAAC;;4FA9EU,sBAAsB;sGAAtB,sBAAsB;QChBnC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACK;QAAA,kHAAyE;QAC1E,kHAA8E;QAC9E,wEAAwB;QAAA,yEAAc;QAAA,4DAAK;QAC3C,gEACA;QAAA,0EAEI;QAF0B,kJAAY,cAAU,IAAC;QAEjD,0EACI;QAAA,4EAAsB;QAAA,wEAAY;QAAA,4DAAQ;QAC1C,wEACA;QAAA,qHAEM;QACV,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,4EAAgB;QAAA,4DAAQ;QAC9C,wEACA;QAAA,qHAEM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,8EACI;QAAA,uHAAiF;QACjF,4EACJ;QAAA,4DAAS;QACT,iEACA;QACJ,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;;QAlCiB,0DAAiB;QAAjB,iFAAiB;QAClB,0DAAmB;QAAnB,mFAAmB;QAGnB,0DAAuB;QAAvB,oFAAuB;QAIsD,0DAAkE;QAAlE,wLAAkE;QACvI,0DAA8C;QAA9C,kHAA8C;QAM2B,0DAAkE;QAAlE,yLAAkE;QAC3I,0DAAkD;QAAlD,sHAAkD;QAMhD,0DAA0B;QAA1B,uFAA0B;QACvB,0DAAmB;QAAnB,mFAAmB;;6FDXzC,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKlD,aAAa;AACkE;AAK/E,cAAc;AACuB;;;;;;;ICRpB,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IACxD,0EAAiD;IAAA,uDAAW;IAAA,4DAAM;;;IAAjB,0DAAW;IAAX,+EAAW;;;IAQhD,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IADhE,0EACI;IAAA,kHAA4D;IAChE,4DAAM;;;IADI,0DAA6B;IAA7B,gGAA6B;;;IAOnC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADtE,0EACI;IAAA,kHAAkE;IACtE,4DAAM;;;IADI,0DAAgC;IAAhC,mGAAgC;;;IAMtC,sEAA2E;;;ADRhG,MAAM,cAAc;IAezB,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,WAAwB;QAHxB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAjBlC,cAAS,GAAG,IAAI,wDAAS,CAAC;YAExB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YAE3F,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SAEzE,CAAC,CAAC;QACD,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAahB,uCAAuC;QACvC,IAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAC;YACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;IAEH,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IAEL,CAAC;IAGD,mDAAmD;IACnD,IAAI,CAAC,KAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC;IAEzC,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,yBAAyB;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,kCAAkC;QAClC,IAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC;YACxB,OAAO;SACR;QAGD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;aAChE,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,IAAI,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAC/B,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC;QAEtC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QAE/B,CAAC,CACF;IACH,CAAC;;4EAzEU,cAAc;8FAAd,cAAc;QClB3B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACK;QAAA,0GAA6D;QAC9D,0GAAkE;QAClE,wEAAwB;QAAA,gEAAK;QAAA,4DAAK;QAClC,gEACA;QAAA,0EACI;QAD0B,0IAAY,cAAU,IAAC;QACjD,0EACI;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,wEACA;QAAA,6GAEM;QACV,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEACA;QAAA,6GAEM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,8EACI;QAAA,+GAA2E;QAC3E,mEACJ;QAAA,4DAAS;QACT,iEACA;QACJ,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;;QAjCiB,0DAAW;QAAX,2EAAW;QACZ,0DAAa;QAAb,6EAAa;QAGb,0DAAuB;QAAvB,oFAAuB;QAG2C,0DAAyD;QAAzD,gLAAyD;QACnH,0DAAiC;QAAjC,qGAAiC;QAMgC,0DAA4D;QAA5D,mLAA4D;QAC7H,0DAAoC;QAApC,wGAAoC;QAMlC,0DAAoB;QAApB,iFAAoB;QACjB,0DAAa;QAAb,6EAAa;;6FDRnC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACY;AACJ;AACuB;AACX;AACD;AACX;AACE;AACQ;AACR;AACF;AACE;AACI;;AAyCtD,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBAnCd;YACP,4DAAY;YAEZ,uEAAc;YACd,8EAAkB;YAClB,qEAAa;YACb,+EAAkB;YAClB,sEAAc;YACd,oEAAa;YACb,wEAAe;YACf,oEAAa;YACb,gFAAmB;YACnB,0EAAmB;YACnB,uEAAc;YACd,2EAAgB;YAChB,sEAAe;SAChB,EAGC,uEAAc;QACd,8EAAkB;QAClB,qEAAa;QACb,+EAAkB;QAClB,sEAAc;QACd,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,gFAAmB;QACnB,0EAAmB;QACnB,uEAAc;QACd,2EAAgB;QAChB,sEAAe;mIAIN,YAAY,cAlCrB,4DAAY;QAEZ,uEAAc;QACd,8EAAkB;QAClB,qEAAa;QACb,+EAAkB;QAClB,sEAAc;QACd,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,gFAAmB;QACnB,0EAAmB;QACnB,uEAAc;QACd,2EAAgB;QAChB,sEAAe,aAIf,uEAAc;QACd,8EAAkB;QAClB,qEAAa;QACb,+EAAkB;QAClB,sEAAc;QACd,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,gFAAmB;QACnB,0EAAmB;QACnB,uEAAc;QACd,2EAAgB;QAChB,sEAAe;6FAIN,YAAY;cArCxB,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBAEZ,uEAAc;oBACd,8EAAkB;oBAClB,qEAAa;oBACb,+EAAkB;oBAClB,sEAAc;oBACd,oEAAa;oBACb,wEAAe;oBACf,oEAAa;oBACb,gFAAmB;oBACnB,0EAAmB;oBACnB,uEAAc;oBACd,2EAAgB;oBAChB,sEAAe;iBAChB;gBAED,OAAO,EAAC;oBACN,uEAAc;oBACd,8EAAkB;oBAClB,qEAAa;oBACb,+EAAkB;oBAClB,sEAAc;oBACd,oEAAa;oBACb,wEAAe;oBACf,oEAAa;oBACb,gFAAmB;oBACnB,0EAAmB;oBACnB,uEAAc;oBACd,2EAAgB;oBAChB,sEAAe;iBAChB;aAEF;;;;;;;;;;;;;;ACrDD;AAAA;AAAA;AAAA;AAA0C;;;AAQnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QAJZ,2EAA+B;;6FAI/B,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,iCAAiC;gBAC3C,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAc3C,MAAM,iBAAiB;IAI5B,YACU,KAAqB,EACrB,MAAc,EACd,WAAwB;QAFxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YACxE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEnB,CAAC,CAAC;IACJ,CAAC;;kFAfU,iBAAiB;iGAAjB,iBAAiB;QCd9B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;6FDcV,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACT;AACgC;AACzB;AACY;AACV;AACiB;AAC0B;AACf;AACV;AACD;;AAsBlE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHV,CAAC,EAAC,OAAO,EAAE,iEAAgB,EAAE,QAAQ,EAAE,qEAAoB,EAAC,CAAC,YAT9D;YACP,uEAAa;YACb,4FAAuB;YACvB,oEAAgB;YAChB,kEAAY;YACZ,0DAAW;YACX,qEAAgB;YAChB,kEAAmB;SACpB;mIAIU,SAAS,mBAlBlB,2DAAY;QACZ,qFAAc;QACd,+GAAsB;QACtB,iGAAiB;QACjB,uFAAiB,aAGjB,uEAAa;QACb,4FAAuB;QACvB,oEAAgB;QAChB,kEAAY;QACZ,0DAAW;QACX,qEAAgB;QAChB,kEAAmB;6FAKV,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qFAAc;oBACd,+GAAsB;oBACtB,iGAAiB;oBACjB,uFAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,oEAAgB;oBAChB,kEAAY;oBACZ,0DAAW;oBACX,qEAAgB;oBAChB,kEAAmB;iBACpB;gBACF,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,iEAAgB,EAAE,QAAQ,EAAE,qEAAoB,EAAC,CAAC;gBACvE,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAE3C,mBAAmB;AACnB,mDAAmD;AAEnD,0CAA0C;AACO;AACa;AAC9D,YAAY;AACuB;AAEnC,gBAAgB;AAC2C;;;AAKpD,MAAM,WAAW;IAMtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACtC,MAAM,KAAK,GAAO,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,GAAG,IAAI,oDAAe,CAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC;IAEzE,CAAC;IAED,IAAW,gBAAgB;QAEzB,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAEvC,CAAC;IAED,KAAK,CAAC,KAAS,EAAE,QAAY;QAC3B,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,aAAa,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,QAAQ,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,CAAC;aACpD,IAAI,CAAC,0DAAG,CAAC,IAAI,GAAE;YAEd,qEAAqE;YACrE,YAAY,CAAC,OAAO,CAAC,aAAa,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,aAAa,CAAC,YAAmB,EAAE,gBAAuB;QACxD,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,qCAAqC,CAAC;QAC5E,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAM,QAAQ,EAAE,EAAC,YAAY,EAAE,gBAAgB,EAAC,CAAC;aACpE,IAAI,CAAC,0DAAG,CAAC,IAAI,GAAE;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,MAAM;QAEJ,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,QAAQ;QACN,4CAA4C;QAE5C,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,iBAAiB;gBAClC,YAAY,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU;aACzC,CAAC;SACH,CAAC;QACF,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,cAAc,CAAC;QACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,QAAQ,EAAC,WAAW,CAAC,CAAC;QAC1D,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,EAAS;QAClB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,iBAAiB;gBAClC,YAAY,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU;aACzC,CAAC;SACH,CAAC;QACF,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,oBAAoB,GAAC,EAAE,CAAC;QAC9D,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,QAAQ,EAAC,WAAW,CAAC,CAAC;QAC7D,OAAO,QAAQ,CAAC;IAClB,CAAC;IAGD,gBAAgB,CAAC,MAAc,EAAC,EAAS;QACvC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,iBAAiB;gBAClC,YAAY,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU;aACzC,CAAC;SACH,CAAC;QACF,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,0BAA0B,GAAC,EAAE,CAAC;QACpE,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAM,QAAQ,EAAC,EAAC,MAAM,EAAC,EAAC,WAAW,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,eAAe,CAAC,EAAS,EAAC,KAAY;QACpC,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,kBAAkB,GAAC,KAAK,CAAC;QAC/D,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,QAAQ,CAAC,CAAC;QAC9C,OAAO,QAAQ,CAAC;IAClB,CAAC;IAGD,QAAQ,CAAC,SAAgB,EAAE,aAAoB;QAC7C,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,wCAAwC,CAAC;QAC/E,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAM,QAAQ,EAAE,EAAC,SAAS,EAAE,aAAa,EAAC,CAAC;aAC9D,IAAI,CAAC,0DAAG,CAAC,IAAI,GAAE;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,WAAW,CAAC,EAAM;QAChB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,iBAAiB;gBAClC,YAAY,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU;aACzC,CAAC;SACH,CAAC;QACF,MAAM,QAAQ,GAAG,qEAAW,CAAC,MAAM,GAAG,iBAAiB,GAAC,EAAE,CAAC;QAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,QAAQ,EAAC,WAAW,CAAC,CAAC;QAC1D,OAAO,QAAQ,CAAC;IAClB,CAAC;;sEAhHU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;6FDOT,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACkB;AAC0B;AACf;AACA;;;AAIpF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,WAAW;QACjB,YAAY,EAAE,GAAG,EAAE,CAAC,+JAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;KAC/E;IACD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qFAAc,EAAE;IACvC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+GAAsB,EAAC;IAClD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gGAAiB,EAAC;IACjD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gGAAiB,EAAC;CAKlD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE,CAAC,CAAC,EACnE,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAC7E,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n//Import Router\nimport {Router, ActivatedRoute} from '@angular/router';\n\n//Import Form\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n\n//Import first\nimport {first} from 'rxjs/operators';\n@Component({\n  selector: 'app-reset-pin',\n  templateUrl: './reset-pin.component.html',\n  styleUrls: ['./reset-pin.component.scss']\n})\nexport class ResetPinComponent implements OnInit {\n\n  \n  resetform = new FormGroup({\n\n    new_pin: new FormControl('', [Validators.required]),\n\n    confirm_pin: new FormControl('', [Validators.required]),\n\n});\n  reset_loading = false;\n  reset_submitted = false;\n  reset_returnUrl!: string;\n  reset_error!: string;\n  reset_success!: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n   \n  ) { \n\n    // redirect to home if already logged in\n    // if(this.authService.currentUserValue){\n    //   this.router.navigate(['user']);\n    // }\n\n  }\n\n  ngOnInit() {\n\n    this.resetform = this.formBuilder.group({\n      new_pin: ['', Validators.required],\n      confirm_pin: ['', Validators.required]\n    });\n\n    this.route.queryParams.subscribe(params=>{\n      if(params['token'] && params['id']){\n        console.log(params['token'],params['id']);\n        this.authService.checkResetToken(params['id'],params['token']).pipe(first())\n        .subscribe(\n          data =>{\n        //  this.reset_loading = true;\n        console.log(data);\n        \n    \n            if(data === false){\n              this.router.navigate(['']);\n            }\n            \n            \n          },\n          error =>{\n            console.log(error);\n            \n            \n          }\n        )\n        \n      }\n    })\n\n  }\n\n\n  //convinience getter for easy access to form fields\n  get f(){ return this.resetform.controls;}\n\n  onSubmit(){\n\n    this.reset_submitted = true;\n    console.log(this.resetform.controls);\n    // return false;\n   \n\n    // reset alerts on submit\n    this.reset_error = '';\n    this.reset_success = '';\n\n    //stop here if the form is invalid\n    if(this.resetform.invalid){\n     \n     return;\n    }\n\n\n    this.authService.resetPin(this.f.new_pin.value, this.f.confirm_pin.value)\n    .pipe(first())\n    .subscribe(\n      data =>{\n     this.reset_loading = true;\n     console.log(data);\n     this.reset_success = 'Reset pin Successfully !!!'\n      this.router.navigate(['']);\n        \n        \n      },\n      error =>{\n        this.reset_error = error.error.msg;\n\n        // console.log(error);\n        \n        \n      }\n    )\n  }\n\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3 mt-5 bg-white p-5\">\n            <div class=\"login-form-div\">\n                 <div *ngIf=\"reset_error\" class=\"alert alert-danger\">{{reset_error}}</div>\n                <div *ngIf=\"reset_success\" class=\"alert alert-success\">{{reset_success}}</div> \n                <h2 class=\"text-center\">Reset pin</h2>\n                <br>\n                <form [formGroup]=\"resetform\" (ngSubmit)=\"onSubmit()\">\n                    \n                    <div class=\"form-group\">\n                        <label for=\"pin\">New Pin</label>\n                        <input type=\"password\" formControlName=\"new_pin\" class=\"form-control\" maxlength=\"5\" [ngClass]=\"{ 'is-invalid': reset_submitted && f.new_pin.errors }\" />\n                        <div *ngIf=\"reset_submitted && f.new_pin.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.new_pin.errors.required\">New Pin is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"pin\">Confirm pin</label>\n                        <input type=\"password\" formControlName=\"confirm_pin\" class=\"form-control\" maxlength=\"5\" [ngClass]=\"{ 'is-invalid': reset_submitted && f.confirm_pin.errors }\" />\n                        <div *ngIf=\"reset_submitted && f.confirm_pin.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.confirm_pin.errors.required\">pin is required</div>\n                        </div>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <button [disabled]=\"reset_loading\" class=\"btn btn-danger btn-block\">\n                            <span *ngIf=\"reset_loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                            Reset pin\n                        </button>\n                        <br>\n                        <!-- <p>Not created account yet? <a routerLink=\"/register\">Register</a></p> -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        \n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n \tapiURL: \"http://112.196.64.119:8000/api/\",\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n//Import Router\nimport {Router, ActivatedRoute} from '@angular/router';\n\n//Import Form\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n\n//Import first\nimport {first} from 'rxjs/operators';\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  resetform = new FormGroup({\n\n    new_password: new FormControl('', [Validators.required]),\n\n    confirm_password: new FormControl('', [Validators.required]),\n\n});\n  reset_loading = false;\n  reset_submitted = false;\n  reset_returnUrl!: string;\n  reset_error!: string;\n  reset_success!: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n   \n  ) { \n\n    //redirect to home if already logged in\n    // if(this.authService.currentUserValue){\n    //   this.router.navigate(['dashboard']);\n    // }\n\n  }\n\n  ngOnInit() {\n\n    this.resetform = this.formBuilder.group({\n      new_password: ['', Validators.required],\n      confirm_password: ['', Validators.required]\n    });\n\n  }\n\n\n  //convinience getter for easy access to form fields\n  get f(){ return this.resetform.controls;}\n\n  onSubmit(){\n    // alert('heyyy');\n    this.reset_submitted = true;\n    console.log(this.resetform.controls);\n    // return false;\n   \n\n    // reset alerts on submit\n    this.reset_error = '';\n    this.reset_success = '';\n\n    //stop here if the form is invalid\n    if(this.resetform.invalid){\n     alert('error')\n    }\n\n\n    this.authService.resetPassword(this.f.new_password.value, this.f.confirm_password.value)\n    .pipe(first())\n    .subscribe(\n      data =>{\n     this.reset_loading = true;\n\n        // this.router.navigateByUrl('/');\n        // window.location.reload();\n        // this.reset_success = 'Login successfully';\n        console.log(data);\n        \n        \n      },\n      error =>{\n        this.reset_error = error.error.msg;\n        \n      }\n    )\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3 mt-5 bg-white p-5\">\n            <div class=\"login-form-div\">\n                 <div *ngIf=\"reset_error\" class=\"alert alert-danger\">{{reset_error}}</div>\n                <div *ngIf=\"reset_success\" class=\"alert alert-success\">{{reset_success}}</div> \n                <h2 class=\"text-center\">Reset Password</h2>\n                <br>\n                <form [formGroup]=\"resetform\" (ngSubmit)=\"onSubmit()\">\n                    \n                    <div class=\"form-group\">\n                        <label for=\"password\">New Password</label>\n                        <input type=\"password\" formControlName=\"new_password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': reset_submitted && f.password.errors }\" />\n                        <div *ngIf=\"reset_submitted && f.new_password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.new_password.errors.required\">Password is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Confirm Password</label>\n                        <input type=\"password\" formControlName=\"confirm_password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': reset_submitted && f.password.errors }\" />\n                        <div *ngIf=\"reset_submitted && f.confirm_password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.confirm_password.errors.required\">Password is required</div>\n                        </div>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <button [disabled]=\"reset_loading\" class=\"btn btn-danger btn-block\">\n                            <span *ngIf=\"reset_loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                            Reset Password\n                        </button>\n                        <br>\n                        <!-- <p>Not created account yet? <a routerLink=\"/register\">Register</a></p> -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n//Import Router\nimport {Router, ActivatedRoute} from '@angular/router';\n\n//Import Form\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n\n//Import first\nimport {first} from 'rxjs/operators';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  \n  loginForm = new FormGroup({\n\n    email: new FormControl('', [Validators.required, Validators.minLength(3),Validators.email]),\n\n    password: new FormControl('', [Validators.required, Validators.email]),\n\n});\n  loading = false;\n  submitted = false;\n  returnUrl!: string;\n  error!: string;\n  success!: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n   \n  ) { \n\n    //redirect to home if already logged in\n    if(this.authService.currentUserValue){\n      this.router.navigate(['dashboard']);\n    }\n\n  }\n\n  ngOnInit() {\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n  }\n\n\n  //convinience getter for easy access to form fields\n  get f(){ return this.loginForm.controls;}\n\n  onSubmit(){\n\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.error = '';\n    this.success = '';\n\n    //stop here if the form is invalid\n    if(this.loginForm.invalid){\n      return;\n    }\n\n\n    this.authService.login(this.f.email.value, this.f.password.value)\n    .pipe(first())\n    .subscribe(\n      data =>{\n    this.loading = true;\n\n        this.router.navigateByUrl('/');\n        window.location.reload();\n        this.success = 'Login successfully';\n        \n      },\n      error =>{\n        this.error = error.error.msg;\n        \n      }\n    )\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3 mt-5 bg-white p-5\">\n            <div class=\"login-form-div\">\n                 <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n                <div *ngIf=\"success\" class=\"alert alert-success\">{{success}}</div> \n                <h2 class=\"text-center\">Login</h2>\n                <br>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" ngModel [email]=\"true\"/>\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        </div>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <button [disabled]=\"loading\" class=\"btn btn-danger btn-block\">\n                            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                            Login\n                        </button>\n                        <br>\n                        <!-- <p>Not created account yet? <a routerLink=\"/register\">Register</a></p> -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatTooltipModule,\n    MatRippleModule,\n  ],\n\n  exports:[\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatTooltipModule,\n    MatRippleModule,\n  ]\n\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {}\n","import { Component, OnInit } from '@angular/core';\n\n//Import Router\nimport {Router, ActivatedRoute} from '@angular/router';\n\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport {first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.scss']\n})\nexport class ViewUserComponent implements OnInit {\n\n  user:any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.viewProfile('60ffe739f68b6b24db7c1c11').subscribe((res)=>{\n      console.log(res);\n      \n    })\n  }\n\n  \n  \n\n}\n","<p>view-user works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './auth/components/login/login.component';\nimport { ResetPasswordComponent } from './auth/components/reset-password/reset-password.component';\nimport { ResetPinComponent } from './auth/components/reset-pin/reset-pin.component';\nimport { JournalsComponent } from './modules/journals/journals.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ResetPasswordComponent,\n    ResetPinComponent,\n    JournalsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    SharedModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n//Import HttpClient\n// import {HttpClient} from '@angular/common/http';\n\n//Import Observables and Behaviour Subject\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport { HttpHeaders,HttpClient } from \"@angular/common/http\";\n//Import Map\nimport {map} from 'rxjs/operators';\n\n//Import API URL\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: any;\n\n\n  constructor(private http: HttpClient) { \nconst token:any = localStorage.getItem('currentUser'); \n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(token));\n    this.currentUser = this.currentUserSubject.asObservable();\nconsole.log(this.currentUser);\nthis.currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n\n  }\n\n  public get currentUserValue(){\n\n    return this.currentUserSubject.value;\n\n  }\n\n  login(email:any, password:any){\n    const endPoint = environment.apiURL + 'admin/login';\n    return this.http.post<any>(endPoint, {email, password})\n      .pipe(map(user=>{\n\n        //Store user details and jwt int local storage to keep user logged in\n        localStorage.setItem('currentUser',JSON.stringify(user));\n        return user;\n      }));\n  }\n\n  resetPassword(new_password:string, confirm_password:string){\n    const endPoint = environment.apiURL + 'user/reset/60f80396a4f7811c8dad57c7';\n    return this.http.patch<any>(endPoint, {new_password, confirm_password})\n      .pipe(map(user=>{\n        console.log(user);\n        return user;\n      }));\n  }\n\n  logout(){\n\n    localStorage.removeItem('currentUser');    \n    this.currentUserSubject.next(null);\n  }\n\n  getUsers(): Observable<any> {\n    // console.log(this.currentUser.auth_token);\n    \n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/xml',\n        'auth-token':this.currentUser.auth_token\n      })\n    };\n    const endPoint = environment.apiURL + \"admin/users/\";\n    const response = this.http.get<any>(endPoint,httpOptions);\n    return response;\n  }\n\n  deleteUser(id:string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/xml',\n        'auth-token':this.currentUser.auth_token\n      })\n    };\n    const endPoint = environment.apiURL + \"admin/user/delete/\"+id;\n    const response = this.http.delete<any>(endPoint,httpOptions);\n    return response;\n  }\n\n\n  changeUserStatus(status:boolean,id:string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/xml',\n        'auth-token':this.currentUser.auth_token\n      })\n    };\n    const endPoint = environment.apiURL + \"admin/user/changeStatus/\"+id;\n    const response = this.http.patch<any>(endPoint,{status},httpOptions);\n    return response;\n  }\n\n  checkResetToken(id:string,token:string): Observable<any> {\n    const endPoint = environment.apiURL + \"user/checkToken/\"+token;\n    const response = this.http.get<any>(endPoint);\n    return response;\n  }\n\n\n  resetPin(new_token:string, confirm_token:string){\n    const endPoint = environment.apiURL + 'user/resetPin/60f80396a4f7811c8dad57c7';\n    return this.http.patch<any>(endPoint, {new_token, confirm_token})\n      .pipe(map(user=>{\n        console.log(user);\n        return user;\n      }));\n  }\n\n  viewProfile(id:any): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/xml',\n        'auth-token':this.currentUser.auth_token\n      })\n    };\n    const endPoint = environment.apiURL + \"admin/viewuser/\"+id;\n    const response = this.http.get<any>(endPoint,httpOptions);\n    return response;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-journals',\n  templateUrl: './journals.component.html',\n  styleUrls: ['./journals.component.scss']\n})\nexport class JournalsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>journals works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/components/login/login.component';\nimport { ResetPasswordComponent } from './auth/components/reset-password/reset-password.component';\nimport { ResetPinComponent } from './auth/components/reset-pin/reset-pin.component';\nimport { ViewUserComponent } from './auth/components/view-user/view-user.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./layout/layout.module').then(m => m.LayoutModule)\n  },\n  { path: '', component: LoginComponent },\n  {path: 'reset', component: ResetPasswordComponent},\n  {path: 'reset-pin', component: ResetPinComponent},\n  {path: 'view-user', component: ViewUserComponent},\n\n  // {\n  //   path: '**', loadChildren: ()\n  // }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}